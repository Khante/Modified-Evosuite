/*
 * This file was automatically generated by EvoSuite
 * Mon Dec 03 03:58:48 GMT 2018
 */

package tutorial;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import tutorial.solution;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class solution_ESTest extends solution_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      solution.SieveOfEratosthenes(1493);
      solution.SieveOfEratosthenes(1493);
      solution.SieveOfEratosthenes((-549));
      solution.SieveOfEratosthenes(1924);
      solution solution0 = new solution();
      boolean[] booleanArray0 = new boolean[9];
      booleanArray0[0] = false;
      booleanArray0[1] = true;
      booleanArray0[2] = false;
      booleanArray0[3] = false;
      booleanArray0[4] = true;
      booleanArray0[5] = true;
      booleanArray0[6] = false;
      booleanArray0[7] = true;
      booleanArray0[8] = false;
      solution.prime = booleanArray0;
      solution.prime = null;
      int[] intArray0 = new int[5];
      intArray0[0] = (-1434);
      intArray0[1] = 1924;
      intArray0[2] = 1493;
      intArray0[3] = 1924;
      intArray0[4] = 1493;
      // Undeclared exception!
      try { 
        solution.sortedArray(intArray0, 3003);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      solution solution0 = new solution();
      boolean[] booleanArray0 = new boolean[1];
      booleanArray0[0] = true;
      solution.prime = booleanArray0;
      boolean[] booleanArray1 = new boolean[3];
      booleanArray1[0] = false;
      booleanArray1[1] = false;
      booleanArray1[2] = true;
      solution.prime = booleanArray1;
      solution.SieveOfEratosthenes((-3732));
      // Undeclared exception!
      try { 
        solution.SieveOfEratosthenes(2161);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int[] intArray0 = new int[0];
      int int0 = 100005;
      // Undeclared exception!
      solution.sortedArray(intArray0, 100005);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      solution solution0 = new solution();
      boolean[] booleanArray0 = new boolean[7];
      booleanArray0[0] = true;
      booleanArray0[1] = false;
      booleanArray0[2] = false;
      booleanArray0[3] = true;
      booleanArray0[4] = false;
      booleanArray0[5] = true;
      booleanArray0[6] = false;
      solution.prime = booleanArray0;
      solution.SieveOfEratosthenes((-1989));
      solution.SieveOfEratosthenes((-1989));
      int[] intArray0 = new int[6];
      intArray0[0] = (-1989);
      intArray0[1] = (-1989);
      intArray0[2] = (-1989);
      intArray0[3] = (-350);
      intArray0[4] = (-1989);
      intArray0[5] = 0;
      // Undeclared exception!
      try { 
        solution.sortedArray(intArray0, 100006);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      int int0 = 0;
      solution.SieveOfEratosthenes(0);
      solution.SieveOfEratosthenes(2692);
      int[] intArray0 = null;
      // Undeclared exception!
      solution.sortedArray((int[]) null, 2692);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      int int0 = 100006;
      // Undeclared exception!
      solution.SieveOfEratosthenes(100006);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      solution.SieveOfEratosthenes(324);
      int[] intArray0 = new int[0];
      int int0 = 0;
      // Undeclared exception!
      solution.sortedArray(intArray0, 0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      int[] intArray0 = null;
      int int0 = (-55);
      // Undeclared exception!
      solution.sortedArray((int[]) null, (-55));
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      int[] intArray0 = new int[6];
      intArray0[0] = (-4775);
      intArray0[1] = 426;
      intArray0[2] = 0;
      intArray0[3] = (-2268);
      intArray0[4] = 1417;
      intArray0[5] = 0;
      // Undeclared exception!
      solution.sortedArray(intArray0, 0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int[] intArray0 = new int[0];
      int int0 = 0;
      // Undeclared exception!
      solution.sortedArray(intArray0, 0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int[] intArray0 = null;
      int int0 = 187;
      // Undeclared exception!
      solution.sortedArray((int[]) null, 187);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      solution solution0 = new solution();
      boolean[] booleanArray0 = new boolean[6];
      booleanArray0[0] = true;
      booleanArray0[1] = false;
      booleanArray0[2] = false;
      booleanArray0[3] = false;
      booleanArray0[4] = false;
      booleanArray0[5] = false;
      solution.prime = booleanArray0;
      int[] intArray0 = null;
      // Undeclared exception!
      try { 
        solution.sortedArray((int[]) null, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      solution solution0 = new solution();
      int[] intArray0 = new int[5];
      intArray0[0] = (-681);
      intArray0[1] = 0;
      intArray0[2] = 1;
      intArray0[3] = 1;
      intArray0[4] = (-2086);
      // Undeclared exception!
      solution.sortedArray(intArray0, 1);
  }
}
